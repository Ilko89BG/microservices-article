{
  "service": {
    "service": "main-api-gateway",
    "serviceObject": {
      "name": "main-api-gateway"
    },
    "provider": {
      "stage": "develop",
      "variableSyntax": "\\${([^{}]+?)}",
      "name": "aws",
      "runtime": "nodejs12.x",
      "region": "eu-central-1",
      "apiGateway": {
        "restApiId": {
          "Ref": "APIGW"
        },
        "restApiRootResourceId": {
          "Fn::GetAtt": [
            "APIGW",
            "RootResourceId"
          ]
        }
      },
      "versionFunctions": true,
      "remoteFunctionData": null,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "MainLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/main-api-gateway-develop-main"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "main-api-gateway-develop",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/main-api-gateway-develop*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/main-api-gateway-develop*:*:*"
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "main-api-gateway-develop",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "MainLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/main-api-gateway/develop/1592372097489-2020-06-17T05:34:57.489Z/main-api-gateway.zip"
              },
              "FunctionName": "main-api-gateway-develop-main",
              "Handler": "lambda.handler",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs12.x",
              "Timeout": 6
            },
            "DependsOn": [
              "MainLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "MainLambdaVersionlpwcRujdGWY0pzP4BH33HCWnHjgPK42FyohdbQo": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "MainLambdaFunction"
              },
              "CodeSha256": "FQGUJnvELC0MDKNBla23/ccOW4UVMFu13QUVIpSe/Ow="
            }
          },
          "ApiGatewayResourceProxyVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "APIGW",
                  "RootResourceId"
                ]
              },
              "PathPart": "{proxy+}",
              "RestApiId": {
                "Ref": "APIGW"
              }
            }
          },
          "ApiGatewayMethodAny": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "ANY",
              "RequestParameters": {},
              "ResourceId": {
                "Fn::GetAtt": [
                  "APIGW",
                  "RootResourceId"
                ]
              },
              "RestApiId": {
                "Ref": "APIGW"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "MainLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodProxyVarAny": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "ANY",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceProxyVar"
              },
              "RestApiId": {
                "Ref": "APIGW"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "MainLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayDeployment1592372084148": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "APIGW"
              },
              "StageName": "develop"
            },
            "DependsOn": [
              "ApiGatewayMethodAny",
              "ApiGatewayMethodProxyVarAny"
            ]
          },
          "MainLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "MainLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "$ref": "$[\"service\"][\"provider\"][\"apiGateway\"][\"restApiId\"]"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "APIGW": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "limehome-api-gw-develop"
            }
          },
          "UsersAPIResource": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "APIGW",
                  "RootResourceId"
                ]
              },
              "PathPart": "users",
              "RestApiId": {
                "Ref": "APIGW"
              }
            }
          },
          "UsersAPIProxyResource": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "UsersAPIResource"
              },
              "PathPart": "{proxy+}",
              "RestApiId": {
                "Ref": "APIGW"
              }
            }
          },
          "UsersAPIRootMethod": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "ANY",
              "ResourceId": {
                "Ref": "UsersAPIResource"
              },
              "RestApiId": {
                "Ref": "APIGW"
              },
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "ANY",
                "Type": "HTTP_PROXY",
                "Uri": "http://MediumArticle-Users-env.eba-j7dxryyd.eu-central-1.elasticbeanstalk.com",
                "PassthroughBehavior": "WHEN_NO_MATCH",
                "IntegrationResponses": [
                  {
                    "StatusCode": 200
                  }
                ]
              }
            }
          },
          "UsersAPIProxyMethod": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "ANY",
              "ResourceId": {
                "Ref": "UsersAPIProxyResource"
              },
              "RestApiId": {
                "Ref": "APIGW"
              },
              "AuthorizationType": "NONE",
              "RequestParameters": {
                "method.request.path.proxy": true
              },
              "Integration": {
                "CacheKeyParameters": [
                  "method.request.path.proxy"
                ],
                "RequestParameters": {
                  "integration.request.path.proxy": "method.request.path.proxy"
                },
                "IntegrationHttpMethod": "ANY",
                "Type": "HTTP_PROXY",
                "Uri": "http://MediumArticle-Users-env.eba-j7dxryyd.eu-central-1.elasticbeanstalk.com/{proxy}",
                "PassthroughBehavior": "WHEN_NO_MATCH",
                "IntegrationResponses": [
                  {
                    "StatusCode": 200
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          },
          "MainLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "MainLambdaVersionlpwcRujdGWY0pzP4BH33HCWnHjgPK42FyohdbQo"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "APIGW"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/develop"
                ]
              ]
            }
          },
          "apiGatewayRestApiId": {
            "Value": {
              "Ref": "APIGW"
            },
            "Export": {
              "Name": "APIGW-restApiId-develop"
            }
          },
          "apiGatewayRestApiRootResourceId": {
            "Value": {
              "Fn::GetAtt": [
                "APIGW",
                "RootResourceId"
              ]
            },
            "Export": {
              "Name": "APIGW-rootResourceId-develop"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "config": {
        "USERS_SERVICE": "http://MediumArticle-Users-env.eba-j7dxryyd.eu-central-1.elasticbeanstalk.com"
      },
      "apigwBinary": {
        "types": [
          "*/*"
        ]
      }
    },
    "plugins": [
      "serverless-apigw-binary"
    ],
    "pluginsData": {},
    "functions": {
      "main": {
        "handler": "lambda.handler",
        "events": [
          {
            "http": {
              "path": "",
              "method": "any",
              "integration": "AWS_PROXY"
            }
          },
          {
            "http": "ANY /{proxy+}"
          }
        ],
        "name": "main-api-gateway-develop-main",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "MainLambdaVersionlpwcRujdGWY0pzP4BH33HCWnHjgPK42FyohdbQo"
      }
    },
    "resources": {
      "Resources": {
        "APIGW": {
          "Type": "AWS::ApiGateway::RestApi",
          "Properties": {
            "Name": "limehome-api-gw-develop"
          }
        },
        "UsersAPIResource": {
          "Type": "AWS::ApiGateway::Resource",
          "Properties": {
            "ParentId": {
              "Fn::GetAtt": [
                "APIGW",
                "RootResourceId"
              ]
            },
            "PathPart": "users",
            "RestApiId": {
              "Ref": "APIGW"
            }
          }
        },
        "UsersAPIProxyResource": {
          "Type": "AWS::ApiGateway::Resource",
          "Properties": {
            "ParentId": {
              "Ref": "UsersAPIResource"
            },
            "PathPart": "{proxy+}",
            "RestApiId": {
              "Ref": "APIGW"
            }
          }
        },
        "UsersAPIRootMethod": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "HttpMethod": "ANY",
            "ResourceId": {
              "Ref": "UsersAPIResource"
            },
            "RestApiId": {
              "Ref": "APIGW"
            },
            "AuthorizationType": "NONE",
            "Integration": {
              "IntegrationHttpMethod": "ANY",
              "Type": "HTTP_PROXY",
              "Uri": "http://MediumArticle-Users-env.eba-j7dxryyd.eu-central-1.elasticbeanstalk.com",
              "PassthroughBehavior": "WHEN_NO_MATCH",
              "IntegrationResponses": [
                {
                  "StatusCode": 200
                }
              ]
            }
          }
        },
        "UsersAPIProxyMethod": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "HttpMethod": "ANY",
            "ResourceId": {
              "Ref": "UsersAPIProxyResource"
            },
            "RestApiId": {
              "Ref": "APIGW"
            },
            "AuthorizationType": "NONE",
            "RequestParameters": {
              "method.request.path.proxy": true
            },
            "Integration": {
              "CacheKeyParameters": [
                "method.request.path.proxy"
              ],
              "RequestParameters": {
                "integration.request.path.proxy": "method.request.path.proxy"
              },
              "IntegrationHttpMethod": "ANY",
              "Type": "HTTP_PROXY",
              "Uri": "http://MediumArticle-Users-env.eba-j7dxryyd.eu-central-1.elasticbeanstalk.com/{proxy}",
              "PassthroughBehavior": "WHEN_NO_MATCH",
              "IntegrationResponses": [
                {
                  "StatusCode": 200
                }
              ]
            }
          }
        }
      },
      "Outputs": {
        "apiGatewayRestApiId": {
          "Value": {
            "Ref": "APIGW"
          },
          "Export": {
            "Name": "APIGW-restApiId-develop"
          }
        },
        "apiGatewayRestApiRootResourceId": {
          "Value": {
            "Fn::GetAtt": [
              "APIGW",
              "RootResourceId"
            ]
          },
          "Export": {
            "Name": "APIGW-rootResourceId-develop"
          }
        }
      }
    },
    "serviceFilename": "serverless.yml",
    "layers": {},
    "isDashboardMonitoringPreconfigured": false,
    "artifact": "/home/ilko/Desktop/Projects/Limehome/microservices-article/APIGateway/.serverless/main-api-gateway.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/main-api-gateway/develop/1592372097489-2020-06-17T05:34:57.489Z",
    "artifact": "main-api-gateway.zip"
  }
}